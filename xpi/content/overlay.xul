<?xml version="1.0"?>
<?xml-stylesheet href="chrome://classic_theme_restorer/content/overlay.css" type="text/css"?>

<!--### most code taken from nightlys default browser.xul ###-->

<!--### use default dtd locale files for duplicated default item labels ###-->
<!--### chrome://classic_theme_restorer/content/overlay.dtd is a backup file ###-->
<!DOCTYPE overlay [
	<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
		%brandDTD;
	<!ENTITY % browserDTD SYSTEM "chrome://browser/locale/browser.dtd">
		%browserDTD;
	<!ENTITY % baseMenuDTD SYSTEM "chrome://browser/locale/baseMenuOverlay.dtd">
		%baseMenuDTD;
	<!ENTITY % textcontextDTD SYSTEM "chrome://global/locale/textcontext.dtd">
		%textcontextDTD;
	<!ENTITY % customizeToolbarDTD SYSTEM "chrome://global/locale/customizeToolbar.dtd">
		%customizeToolbarDTD;
	<!ENTITY % window SYSTEM "chrome://classic_theme_restorer/locale/options.dtd">
		%window;
	<!ENTITY % mainwindowDTD SYSTEM "chrome://classic_theme_restorer/content/overlay.dtd">
		%mainwindowDTD;
]>

<overlay id="classic_theme_restorer-overlay" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<script type="application/x-javascript" src="overlay.js"/>

	<commandset id="mainCommandSet">
	   <command id="CtrExtension:ToggleCtrAddonBar" oncommand="classicthemerestorerjs.ctr.toggleCtrAddonBar();"/>
	   <command id="CtrExtension:ToggleUrlExtraBar" oncommand="classicthemerestorerjs.ctr.toggleCtrUrlExtraBar();"/>
	</commandset>
	
	<keyset id="mainKeyset">
	  <key id="ctraddon_key_toggleCtrAddonBar" command="CtrExtension:ToggleCtrAddonBar" key="/" modifiers="accel"/>
	</keyset>
 
	<!--### add new buttons to customizing area ###-->
	<hbox id="customization-container">
	  <vbox id="customization-palette-container">
		 <hbox id="ctraddon_cuibuttonsbox" ordinal="1000" collapsed="true">
			<button label="&Ctr_cuibuttons;" id="ctraddon_cuibuttons_main" class="ctraddon_cuibutlabel customizationmode-button"/>
			<button label="&Ctr_cuibutnormal;" id="ctraddon_cui-smallnavbut-button1" class="customizationmode-button" oncommand="classicthemerestorerjs.ctr.prefs.setBoolPref('smallnavbut',false);classicthemerestorerjs.ctr.prefs.setBoolPref('bfurlbarfix',false);"/>
			<button label="&Ctr_cuibutsmall;" id="ctraddon_cui-smallnavbut-button2" class="customizationmode-button" oncommand="classicthemerestorerjs.ctr.prefs.setBoolPref('smallnavbut',true);classicthemerestorerjs.ctr.prefs.setBoolPref('bfurlbarfix',true);"/>
			<button label="&Ctr_cuimode;" class="ctraddon_cuibutlabel customizationmode-button"/>
			<button label="&Ctr_cuiico;" id="ctraddon_cui-icons-button" class="customizationmode-button" oncommand="classicthemerestorerjs.ctr.cuiPrefChangeString('nav_txt_ico', 'icons');"/>
			<button label="&Ctr_cuiicotxt;" id="ctraddon_cui-iconstext-button" class="customizationmode-button" oncommand="classicthemerestorerjs.ctr.cuiPrefChangeString('nav_txt_ico', 'iconstxt');"/>
			<button label="&Ctr_cuitxt;" id="ctraddon_cui-textonly-button" class="customizationmode-button" oncommand="classicthemerestorerjs.ctr.cuiPrefChangeString('nav_txt_ico', 'txtonly');"/>
			<spacer id="ctraddon_cui_spacer"/>
			<button label="&Ctr_cuitabsnontop;" id="ctraddon_cui-tabsnontop" class="customizationmode-button" oncommand="classicthemerestorerjs.ctr.cuiPrefTabsNontop();"/>
			<button label="&Ctr_extrabar;" id="ctraddon_cui-addtoolbars" class="customizationmode-button" oncommand="classicthemerestorerjs.ctr.additionalToolbars();"/>
		 </hbox>
	  </vbox>
	</hbox>

	<!--### create new add-ons bar ###-->
	<vbox id="browser-bottombox">
		<toolbar id="ctraddon_addon-bar" customizable="true"
				 class="toolbar-primary chromeclass-toolbar"
				 mode="icons"
				 iconsize="small"
				 toolboxid="navigator-toolbox"
				 context="toolbar-context-menu"
				 toolbarname="&Ctr_addonbar;"
				 lockiconsize="true"
				 accesskey="&Ctr_addon-bar.accesskey;"
				 key="key_toggleCtrAddonBar"
				 defaultset="ctraddon_addonbar-close,spring,ctraddon_statusbar">
		  <toolbarbutton id="ctraddon_addonbar-close" removable="false"
				    oncommand="classicthemerestorerjs.ctr.toggleCtrAddonBar();"/>
					
		  <toolbaritem id="ctraddon_statusbar"
					   title="&Ctr_statusbar;"
					   customizableui-areatype="toolbar"
					   overflows="false"
					   removable="true"/>
		</toolbar>
		<toolbar id="ctraddon_toolbar_dummy" customizable="false"
				 hidden="true"
				 defaultset="PanelUI-menu-button">
		  <!-- ### move PanelUI-menu-button dummy here to prevent glitches with CTRs movable button -->
          <toolbarbutton id="PanelUI-menu-button" removable="false" collapsed="true"/>
		</toolbar>
	</vbox>
	
	<vbox id="appcontent">

	  <hbox id="ctraddon_urlextrabar" insertbefore="content" collapsed="true">
		<textbox id="ctraddon_extraurlbar_tb" flex="1" type="autocomplete"
				  completeselectedindex="true"
				  placeholder="&urlbar.placeholder2;"
				  autocompletesearch="urlinline history"
				  enablehistory="true"
				  class="uri-element"
				  onkeydown="if(event.keyCode == '13') {gBrowser.selectedTab=gBrowser.addTab(this.value); document.getElementById('ctraddon_urlextrabar').setAttribute('collapsed',true);} else if(event.keyCode == '27') {document.getElementById('ctraddon_urlextrabar').setAttribute('collapsed',true);}"/>
		  <button id="ctr_extraurlbar_button" removable="false" class="toolbarbutton-1"
					oncommand="gBrowser.selectedTab=gBrowser.addTab(document.getElementById('ctraddon_extraurlbar_tb').value); document.getElementById('ctraddon_urlextrabar').setAttribute('collapsed',true);"/>
		  <button id="ctraddon_extraurlbar-close" removable="false" class="ctr_extraurlbar_button-close close-icon"
			    oncommand="document.getElementById('ctraddon_urlextrabar').setAttribute('collapsed',true);"/>
	  </hbox>

	</vbox>
	
	<!--### add a CTR button to panel menu ###-->
	<hbox id="PanelUI-footer-inner">
	  <toolbarbutton id="ctraddon_PanelUI-CTR-button"
					 insertbefore="PanelUI-help"
					 oncommand="classicthemerestorerjs.ctr.openCTRPreferences();"
					 tooltiptext="&Ctr_title;"/>
	  <toolbarseparator insertbefore="PanelUI-help" id="ctraddon_PanelUI-CTR-button-separator"/>
	</hbox>
	
	<!--### add a menuseparator for the removed context menu icons option ###-->
	<menugroup id="context-navigation">
	  <menuseparator id="ctraddon_connavsep" insertbefore="context-bookmarkpage"/>
	</menugroup>
	
	<menuitem id="context-back" label="&backCmd.label;" accesskey="&backCmd.accesskey;"/>
	<menuitem id="context-forward" label="&forwardCmd.label;" accesskey="&forwardCmd.accesskey;"/>
	<menuitem id="context-reload" label="&reloadCmd.label;" accesskey="&reloadCmd.accesskey;"/>
	<menuitem id="context-stop" label="&stopCmd.label;" accesskey="&stopCmd.accesskey;"/>
	<menuitem id="context-bookmarkpage" label="&bookmarkThisPageCmd.label;" accesskey="&bookmarkPageCmd2.accesskey;"/>
	
	<menupopup id="toolbar-context-menu">
	  <menuitem id="toggle_nav-bar"
                label="&navbarCmd.label;"
                toolbarid="nav-bar"
				oncommand="classicthemerestorerjs.ctr.toggleCtrNavBar();"
				type="checkbox"
				insertbefore="viewToolbarsMenuSeparator"/>
	</menupopup>
	
	<!--### add a menuitem to bookmarks context menu to open a bookmark in a new private window ###-->
	<menugroup id="placesContext">
	  <menuitem id="ctraddon_placesContext_openInPrivatewindow"
                label="&Ctr_openInPrivateWindow;"
                accesskey="&Ctr_openInPrivateWindow.accesskey;"
				oncommand="classicthemerestorerjs.ctr.openInPrWin();"
				selectiontype="single"
				selection="link"
				insertbefore="placesContext_openSeparator"/>
	</menugroup>
	
	<!--### Add ability to open the 'more page info' window by clicking the icon inside identity box ###-->
	<image id="page-proxy-favicon"
	  onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('icopageinfo')) gIdentityHandler.handleMoreInfoClick(event); else PageProxyClickHandler(event);"/>

	<button id="customization-reset-button" onclick="if (event.button=='0') classicthemerestorerjs.ctr.resetCTRtoolbarConf();"/>

	<!--### moveable urlbar & buttons ###-->
	<toolbaritem id="urlbar-container" style="min-width:200px !important;" removable="true"/>
	<toolbarbutton id="alltabs-button" removable="true"/>
	<toolbarbutton id="webrtc-status-button" removable="true"/>
	<toolbarbutton id="social-share-button" removable="true"/>
	<toolbaritem id="social-toolbar-item" removable="true"/>

	<toolbar id="TabsToolbar">
      <toolbarbutton id="ctraddon_tabs-closebutton"
                     class="close-button tabs-closebutton close-icon"
					 command="cmd_close"
                     label="&closeTab.label;"
                     cui-areatype="toolbar"
                     tooltiptext="&closeTab.label;"
					 removable="false"/>
	</toolbar>
	
	<!--### CTR entry in menubars 'Tools' menu popup ###-->
	<menupopup id="menu_ToolsPopup">
	  <menuitem oncommand="classicthemerestorerjs.ctr.openCTRPreferences();"
		label="&Ctr_title;"
		class="menuitem-iconic"
		id="ctraddon_tools_menu_entry"/>
	</menupopup>
	
	<menupopup id="toolbar-context-menu">
	  <menuitem oncommand="classicthemerestorerjs.ctr.openCTRPreferences();"
		label="&Ctr_title;"
		class="menuitem-iconic"
		id="ctraddon_context_menu_entry"/>
	</menupopup>

	<!--### CTRs appmenu popup
		!!!! IMPORTANT for AMO Editors !!!
	
		Almost all '*appmenu / appmenu*' menuitems, panes and popups have to use
		pre-Australis ids. They have to do this - not being prefixed by CTR -
		to be compatible to add-ons that add or have added items to appmenu
		and to allow themes to use previous code to add menuitem icons!
		
		Using non-pre-Australis or own ids would require every add-on/theme to
		add support to CTR manually resulting in a much lower compatibility without
		any benefit to anyone!
		
		Using non-pre-Australis or own ids does not create any conflicts, because
		pre-Australis menuitem ids are not used by Firefox 29+ anymore.
		
		Native splitmenus will not be added, because of compatibility issues with
		complete themes, Apple MacOSX, menuitem icons etc...
		
		!!!! IMPORTANT for AMO Editors !!!
	###-->
	<popupset>
		<menupopup id="appmenu-popup" position="after_start">
		<hbox>
		  <vbox id="appmenuPrimaryPane">
			<menu id="appmenu_newTab"
					label="&tabCmd.label;"
					splitmenu="true"
					onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('appbclmmenus')
								&amp;&amp; event.button=='0'
								&amp;&amp; event.originalTarget.getAttribute('splitmenu')=='true')
								{BrowserOpenNewTabOrWindow(event);document.getElementById('appmenu-popup').hidePopup();}"
					class="menu-iconic">
				<menupopup id="ctraddon_menu_newTabmenupopup">
					<menuitem id="appmenu_newTab_popup"
							  label="&tabCmd.label;"
							  command="cmd_newNavigatorTab"
							  key="key_newNavigatorTab"
							  accesskey="&tabCmd.accesskey;"/>
					<menuitem id="appmenu_newNavigator"
							  label="&newNavigatorCmd.label;"
							  command="cmd_newNavigator"
							  accesskey="&newNavigatorCmd.accesskey;"
							  key="key_newNavigator"/>
					<menuseparator/>
					<menuitem id="appmenu_openFile"
							  label="&openFileCmd.label;"
							  command="Browser:OpenFile"
							  key="openFileKb"
							  accesskey="&openFileCmd.accesskey;"/>
				</menupopup>
			</menu>

			<menuitem id="appmenu_newPrivateWindow"
					label="&newPrivateWindow.label;"
					class="menuitem-iconic"
					command="Tools:PrivateBrowsing"/>
			<menuseparator/>

			<hbox id="ctraddon_appmenubox_edit" label="&editMenu.label;">
				<menuitem id="appmenu-edit-label"
						  label="&editMenu.label;"
						  disabled="true"
						  class="menuitem-iconic"
						  flex="1"/>
				<toolbarbutton id="appmenu-cut"
							   command="cmd_cut"/>
				<toolbarbutton id="appmenu-copy"
							   command="cmd_copy"/>
				<toolbarbutton id="appmenu-paste"
							   command="cmd_paste"/>

				<menu id="appmenu-editmenu"
								label=""
								class="menu-iconic">
					<menupopup id="appmenu-editmenu-menupopup">
						<menuitem id="appmenu-editmenu-cut"
								  label="&cutCmd.label;"
								  class="menuitem-iconic"
								  key="key_cut"
								  accesskey="&cutCmd.accesskey;"
								  command="cmd_cut"/>
						<menuitem id="appmenu-editmenu-copy"
								  label="&copyCmd.label;"
								  class="menuitem-iconic"
								  key="key_copy"
								  accesskey="&copyCmd.accesskey;"
								  command="cmd_copy"/>
						<menuitem id="appmenu-editmenu-paste"
								  label="&pasteCmd.label;"
								  class="menuitem-iconic"
								  key="key_paste"
								  accesskey="&pasteCmd.accesskey;"
								  command="cmd_paste"/>
						<menuseparator/>
						<menuitem id="appmenu-editmenu-undo"
								  label="&undoCmd.label;"
								  key="key_undo"
								  accesskey="&undoCmd.accesskey;"
								  command="cmd_undo"/>
						<menuitem id="appmenu-editmenu-redo"
								  label="&redoCmd.label;"
								  key="key_redo"
								  accesskey="&redoCmd.accesskey;"
								  command="cmd_redo"/>
						<menuseparator/>
						<menuitem id="appmenu-editmenu-selectAll"
								  label="&selectAllCmd.label;"
								  key="key_selectAll"
								  accesskey="&selectAllCmd.accesskey;"
								  command="cmd_selectAll"/>
						<menuseparator/>
						<menuitem id="appmenu-editmenu-delete"
								  label="&deleteCmd.label;"
								  key="key_delete"
								  accesskey="&deleteCmd.accesskey;"
								  command="cmd_delete"/>
					</menupopup>
				</menu>
			</hbox>
			
			<menuitem id="appmenu_find"
					  label="&findOnCmd.label;"
					  class="menuitem-iconic"
					  command="cmd_find"/>
			<menuseparator/>
			<menuitem id="appmenu_savePage"
					  label="&savePageCmd.label;"
					  class="menuitem-iconic"
					  command="Browser:SavePage"/>
			<menuitem id="appmenu_sendLink"
					  label="&emailPageCmd.label;"
					  class="menuitem-iconic"
					  command="Browser:SendLink"/>

			<menu id="appmenu_print"
					label="&printCmd.label;"
					splitmenu="true"
					onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('appbclmmenus')
								&amp;&amp; event.button=='0'
								&amp;&amp; event.originalTarget.getAttribute('splitmenu')=='true')
								{PrintUtils.print();}"
					class="menu-iconic">
				<menupopup id="ctraddon_menu_newPrintmenupopup">
					<menuitem id="appmenu_print_popup"
							  label="&printCmd.label;"
							  class="menuitem-iconic"
							  accesskey="&printCmd.accesskey;"
							  key="printKb"
							  command="cmd_print"/>
					<menuitem id="appmenu_printPreview"
							  label="&printPreviewCmd.label;"
							  accesskey="&printPreviewCmd.accesskey;"
							  command="cmd_printPreview"/>
					<menuitem id="appmenu_printSetup"
							  label="&printSetupCmd.label;"
							  accesskey="&printSetupCmd.accesskey;"
							  command="cmd_pageSetup"/>
				</menupopup>
			</menu>

			<menuseparator/>

			<menu id="appmenu_webDeveloper"
                  label="&webDeveloperMenu.label;"
				  splitmenu="true"
				  onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('appbclmmenus')
							&amp;&amp; event.button=='0'
							&amp;&amp; event.originalTarget.getAttribute('splitmenu')=='true')
							{gDevToolsBrowser.toggleToolboxCommand(gBrowser);document.getElementById('appmenu-popup').hidePopup();}"
				  class="menu-iconic">
                <menupopup id="appmenu_webDeveloper_popup">
                  <menuitem id="appmenu_devToolbox"
                            observes="devtoolsMenuBroadcaster_DevToolbox"
                            accesskey="&devToolboxMenuItem.accesskey;"/>
                  <menuseparator id="appmenu_devtools_separator"/>
                  <menuitem id="appmenu_devToolbar"
                            observes="devtoolsMenuBroadcaster_DevToolbar"
                            accesskey="&devToolbarMenu.accesskey;"/>
                  <menuitem id="appmenu_devAppMgr"
                            observes="devtoolsMenuBroadcaster_DevAppMgr"
                            accesskey="&devAppMgrMenu.accesskey;"/>
                  <menuitem id="appmenu_webide"
                            observes="devtoolsMenuBroadcaster_webide"
                            accesskey="&webide.accesskey;"/>
                  <menuitem id="appmenu_browserConsole"
                            observes="devtoolsMenuBroadcaster_BrowserConsole"
                            accesskey="&browserConsoleCmd.accesskey;"/>
                  <menuitem id="appmenu_responsiveUI"
                            observes="devtoolsMenuBroadcaster_ResponsiveUI"
                            accesskey="&responsiveDesignTool.accesskey;"/>
                  <menuitem id="appmenu_eyedropper"
                            observes="devtoolsMenuBroadcaster_Eyedropper"
                            accesskey="&eyedropper.accesskey;"/>
                  <menuitem id="appmenu_scratchpad"
                            observes="devtoolsMenuBroadcaster_Scratchpad"
                            accesskey="&scratchpad.accesskey;"/>
                  <menuitem id="appmenu_pageSource"
                            observes="devtoolsMenuBroadcaster_PageSource"
                            accesskey="&pageSourceCmd.accesskey;"/>
                  <menuitem id="appmenu_errorConsole"
                            observes="devtoolsMenuBroadcaster_ErrorConsole"
                            accesskey="&errorConsoleCmd.accesskey;"/>
                  <menuitem id="appmenu_devtools_connect"
                            observes="devtoolsMenuBroadcaster_connect"/>
                  <menuseparator/>
                  <menuitem id="appmenu_getMoreDevtools"
                            observes="devtoolsMenuBroadcaster_GetMoreTools"
                            accesskey="&getMoreDevtoolsCmd.accesskey;"/>
				  <menuseparator/>
				  <menuitem id="appmenu_offlineMode"
                          label="&goOfflineCmd.label;"
                          accesskey="&goOfflineCmd.accesskey;"
                          type="checkbox"
                          observes="workOfflineMenuitemState"
                          oncommand="BrowserOffline.toggleOfflineStatus();"/>
                </menupopup>
            </menu>

			<menuseparator/>
			<menuitem id="appmenu_fullScreen"
					  label="&fullScreenCmd.label;"
					  type="checkbox"
					  observes="View:FullScreen"
					  class="menuitem-iconic"/>
			<menuitem id="sync-setup-appmenu"
					  label="&syncSetup.label;"
					  observes="sync-setup-state"
					  oncommand="gSyncUI.openSetup()"
					  class="menuitem-iconic"/>
			<menuitem id="appmenu-quit"
					  class="menuitem-iconic ctraddon_windowsonly"
					  label="&quitApplicationCmdWin.label;"
					  accesskey="&quitApplicationCmdWin.accesskey;"
					  command="cmd_quitApplication"/>
			<menuitem id="appmenu-quit"
					  class="menuitem-iconic ctraddon_linuxonly"
					  label="&quitApplicationCmd.label;"
					  accesskey="&quitApplicationCmd.accesskey;"
					  command="cmd_quitApplication"/>
			<menuitem id="appmenu-quit"
					  class="menuitem-iconic ctraddon_maconly"
					  label="&quitApplicationCmdMac.label;"
					  accesskey="&quitApplicationCmd.accesskey;"
					  command="cmd_quitApplication"/>
		  </vbox>

		  <vbox id="appmenuSecondaryPane">

			<menu id="appmenu_bookmarks"
				  label="&bookmarksMenu.label;"
				  splitmenu="true"
				  onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('appbclmmenus')
							&amp;&amp; event.button=='0'
							&amp;&amp; event.originalTarget.getAttribute('splitmenu')=='true')
							{PlacesCommandHook.showPlacesOrganizer('AllBookmarks');document.getElementById('appmenu-popup').hidePopup();}"
				  class="menu-iconic">

				<menupopup id="appmenu_bookmarksPopup"
						   placespopup="true"
						   context="placesContext"
						   openInTabs="children"
						   oncommand="BookmarksEventHandler.onCommand(event, this.parentNode._placesView);"
						   onclick="BookmarksEventHandler.onClick(event, this.parentNode._placesView);"
						   onpopupshowing="PlacesCommandHook.updateBookmarkAllTabsCommand();
										   if (!this.parentNode._placesView)
											new PlacesMenu(event, 'place:folder=BOOKMARKS_MENU');"
						   tooltip="bhTooltip" popupsinherittooltip="true">
				  <menuitem id="appmenu_showAllBookmarks"
							label="&showAllBookmarks2.label;"
							command="Browser:ShowAllBookmarks"
							key="manBookmarkKb"/>
				  <menuseparator/>
				  <menuitem id="appmenu_bookmarkThisPage"
							label="&bookmarkThisPageCmd.label;"
							command="Browser:AddBookmarkAs"
							key="addBookmarkAsKb"/>
				  <menuitem id="appmenu_subscribeToPage"
							label="&subscribeToPageMenuitem.label;"
							oncommand="return FeedHandler.subscribeToFeed(null, event);"
							onclick="checkForMiddleClick(this, event);"
							observes="singleFeedMenuitemState"/>
				  <menu id="appmenu_subscribeToPageMenu"
							class="menu-iconic"
							label="&subscribeToPageMenupopup.label;"
							observes="multipleFeedsMenuState">
					  <menupopup id="appmenu_subscribeToPageMenupopup"
							   onpopupshowing="return FeedHandler.buildFeedList(event.target);"
							   oncommand="return FeedHandler.subscribeToFeed(null, event);"
							   onclick="checkForMiddleClick(this, event);"/>
				  </menu>
				  <menuitem id="menu_bookmarkAllTabs"
							label="&addCurPagesCmd.label;"
							class="show-only-for-keyboard"
							command="Browser:BookmarkAllTabs"
							key="bookmarkAllTabsKb"/>
				  <menuseparator/>
				  <menu id="bookmarksToolbarFolderMenu"
							class="menu-iconic bookmark-item"
							label="&personalbarCmd.label;"
							container="true">
					<menupopup id="appmenu_bookmarksToolbarPopup"
							   placespopup="true"
							   context="placesContext"
							   onpopupshowing="if (!this.parentNode._placesView)
												 new PlacesMenu(event, 'place:folder=TOOLBAR');"/>
				  </menu>
				  <menu id="appmenu_BMB_readingList"
						class="menu-iconic bookmark-item"
						label="&readingList.label;"
						container="true">
					  <observes element="readingListSidebar" attribute="hidden"/>
					  <menupopup id="appmenu_BMB_readingListPopup"
								 placespopup="true"
								 onpopupshowing="ReadingListUI.onReadingListPopupShowing(this);">
						<menuitem id="appmenu_BMB_viewReadingListSidebar"
								  oncommand="SidebarUI.show('readingListSidebar');"
								  label="&readingList.showSidebar.label;"/>
					  </menupopup>
				  </menu>
				  <menuseparator/>
				  <!-- Bookmarks menu items -->
				  <menuseparator builder="end"
								 class="hide-if-empty-places-result"/>
				  <menuitem id="appmenu_unsortedBookmarks"
							label="&unsortedBookmarksCmd.label;"
							class="menuitem-iconic"
							oncommand="PlacesCommandHook.showPlacesOrganizer('UnfiledBookmarks');"/>
				</menupopup>
			</menu>

			<menu id="appmenu_history"
				  label="&historyMenu.label;"
				  splitmenu="true"
				  onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('appbclmmenus')
							&amp;&amp; event.button=='0'
							&amp;&amp; event.originalTarget.getAttribute('splitmenu')=='true')
							{PlacesCommandHook.showPlacesOrganizer('History');document.getElementById('appmenu-popup').hidePopup();}"
				  class="menu-iconic">
			  <menupopup id="appmenu_historyMenupopup"
						 placespopup="true"
						 oncommand="this.parentNode._placesView._onCommand(event);"
						 onclick="checkForMiddleClick(this, event);"
						 onpopupshowing="if (!this.parentNode._placesView)
										   new HistoryMenu(event);"
						 tooltip="bhTooltip"
						 popupsinherittooltip="true">
				<menuitem id="appmenu_showAllHistory"
						  label="&showAllHistoryCmd2.label;"
						  key="showAllHistoryKb"
						  command="Browser:ShowAllHistory"/>
				<menuseparator/>
				<menuitem id="appmenu_sanitizeHistory"
						  label="&clearRecentHistory.label;"
						  key="key_sanitize"
						  command="Tools:Sanitize"/>
				<menuseparator id="sanitizeSeparator"/>
				<menuitem id="appmenu_sync-tabs"
						  class="syncTabsMenuItem"
						  label="&syncTabsMenu2.label;"
						  oncommand="BrowserOpenSyncTabs();"
						  disabled="true"/>
				<menuitem id="appmenu_restoreLastSession"
						  label="&historyRestoreLastSession.label;"
						  command="Browser:RestoreLastSession"/>
				<menu id="appmenu_recentlyClosedTabsMenu"
					  class="recentlyClosedTabsMenu"
					  label="&historyUndoMenu.label;"
					  disabled="true">
				  <menupopup id="appmenu_recentlyClosedTabsMenupopup"
							 placespopup="true"
							 onpopupshowing="document.getElementById('appmenu_history')._placesView.populateUndoSubmenu();"/>
				</menu>
				<menu id="appmenu_recentlyClosedWindowsMenu"
					  class="recentlyClosedWindowsMenu"
					  label="&historyUndoWindowMenu.label;"
					  disabled="true">
				  <menupopup id="appmenu_recentlyClosedWindowsMenupopup"
							 placespopup="true"
							 onpopupshowing="document.getElementById('appmenu_history')._placesView.populateUndoWindowSubmenu();"/>
				</menu>
				<menuseparator/>
			  </menupopup>
			</menu>

            <menuitem id="appmenu_downloads"
                      label="&downloads.label;"
                      command="Tools:Downloads"
					  class="menuitem-iconic"/>

			<menuitem id="appmenu_addons"
                      label="&addons.label;"
					  class="menuitem-iconic"
                      command="Tools:Addons"/>
			
			<!-- Windows version of the options menu with Windows specific labels -->
			<menu id="appmenu_customize"
					label="&preferencesCmd2.label;"
					splitmenu="true"
					onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('appbclmmenus')
								&amp;&amp; event.button=='0'
								&amp;&amp; event.originalTarget.getAttribute('splitmenu')=='true')
								{openPreferences();document.getElementById('appmenu-popup').hidePopup();}"
					class="menu-iconic ctraddon_windowsonly">
			  <menupopup id="appmenu_customizeMenu">					  
				  <menuitem id="appmenu_preferences"
							label="&preferencesCmd2.label;"
							accesskey="&preferencesCmd2.accesskey;"
							oncommand="openPreferences();"/>
				  <menuseparator/>
				  <menuitem command="cmd_CustomizeToolbars"
							accesskey="&viewCustomizeToolbar.accesskey;"
							label="&viewCustomizeToolbar.label;"/>
				  <menuseparator id="ctraddon_appmenu_sep" collapsed="true"/>
				  <menuitem oncommand="classicthemerestorerjs.ctr.openCTRPreferences();"
							label="&Ctr_title;"
							class="menuitem-iconic"
							id="ctraddon_appmenu_ctr"/>
			  </menupopup>
			</menu>

			<!-- MacOSX/Linux/Unix version of the options menu with MacOSX/Linux/Unix specific labels -->
			<menu id="appmenu_customizeUnix"
					label="&preferencesCmdUnix.label;"
					splitmenu="true"
					onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('appbclmmenus')
								&amp;&amp; event.button=='0'
								&amp;&amp; event.originalTarget.getAttribute('splitmenu')=='true')
								{openPreferences();document.getElementById('appmenu-popup').hidePopup();}"
					class="menu-iconic ctraddon_nonwindows">
			  <menupopup id="appmenu_customizeMenu">					  
				  <menuitem id="appmenu_preferencesUnix"
							label="&preferencesCmdUnix.label;"
							class="ctraddon_nonwindows"
							accesskey="&preferencesCmdUnix.accesskey;"
							oncommand="openPreferences();"/>
				  <menuseparator/>
				  <menuitem command="cmd_CustomizeToolbars"
							accesskey="&viewCustomizeToolbar.accesskey;"
							label="&viewCustomizeToolbar.label;"/>
				  <menuseparator id="ctraddon_appmenu_sep2" collapsed="true"/>
				  <menuitem oncommand="classicthemerestorerjs.ctr.openCTRPreferences();"
							label="&Ctr_title;"
							class="menuitem-iconic"
							id="ctraddon_appmenu_ctr2"/>
			  </menupopup>
			</menu>

			<menu id="appmenu_help"
					label="&helpMenuWin.label;"
					splitmenu="true"
					onclick="if(classicthemerestorerjs.ctr.prefs.getBoolPref('appbclmmenus')
								&amp;&amp; event.button=='0'
								&amp;&amp; event.originalTarget.getAttribute('splitmenu')=='true')
								{openHelpLink('firefox-help');document.getElementById('appmenu-popup').hidePopup();}"
					class="menu-iconic">
			  <menupopup id="appmenu_helpMenupopup" onpopupshowing="buildHelpMenu();">
				<menuitem id="appmenu_openHelp"
						  oncommand="openHelpLink('firefox-help')"
						  onclick="checkForMiddleClick(this, event);"
						  label="&productHelp.label;"
						  accesskey="&productHelp.accesskey;"/>
				<menuitem id="appmenu_gettingStarted"
						  label="&appMenuGettingStarted.label;"
						  oncommand="gBrowser.loadOneTab('https://www.mozilla.org/firefox/central/', {inBackground: false});"
						  onclick="checkForMiddleClick(this, event);"/>
				<menuitem id="appmenu_openTour"
						  oncommand="openTourPage();"
						  label="&helpShowTour.label;"
						  accesskey="&helpShowTour.accesskey;"/>
				<menuitem id="appmenu_keyboardShortcuts"
						  oncommand="openHelpLink('keyboard-shortcuts')"
						  onclick="checkForMiddleClick(this, event);"
						  label="&helpKeyboardShortcuts.label;"
						  accesskey="&helpKeyboardShortcuts.accesskey;"/>
				<menuitem id="appmenu_healthReport"
						  label="&healthReport.label;"
						  accesskey="&healthReport.accesskey;"
						  oncommand="openHealthReport()"
						  onclick="checkForMiddleClick(this, event);"/>
				<menuitem id="appmenu_troubleshootingInfo"
						  accesskey="&helpTroubleshootingInfo.accesskey;"
						  label="&helpTroubleshootingInfo.label;"
						  oncommand="openTroubleshootingPage()"
						  onclick="checkForMiddleClick(this, event);"/>
				<menuitem id="appmenu_feedbackPage"
						  accesskey="&helpFeedbackPage.accesskey;"
						  label="&helpFeedbackPage.label;"
						  oncommand="openFeedbackPage()"
						  onclick="checkForMiddleClick(this, event);"/>
				<menuseparator/>
				<menuitem id="appmenu_safeMode"
						  accesskey="&helpSafeMode.accesskey;"
						  label="&helpSafeMode.label;"
						  oncommand="safeModeRestart();"/>
				<menuseparator/>
				<menuitem id="appmenu_about"
						  accesskey="&aboutProduct.accesskey;"
						  label="&aboutProduct.label;"
						  oncommand="openAboutDialog();"/>
			  </menupopup>
			</menu>
			
		  </vbox>
		</hbox>
		
		</menupopup>
	</popupset>

	
	<!--### add custom buttons to customizing palette ###-->
	
	<toolbarpalette id="BrowserToolbarPalette">
		
	  <!--### appbutton for toolbars (Windows, Linux, MacOSX) ###-->
	  <toolbarbutton id="ctraddon_appbutton"
                     class="toolbarbutton-1 ctraddon-toolbarbutton"
                     persist="class"
                     removable="true"
                     type="menu"
                     label="&brandShortName;"
					 popup="appmenu-popup"
					 onmousedown="classicthemerestorerjs.ctr.openCtrAppmenuPopup();">
	  </toolbarbutton>

	  <!--### adds own history menu button to browsers customizing area ###-->
	  <toolbarbutton id="ctraddon_history-menu-toolbar-button"
                     class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
                     persist="class"
                     removable="true"
                     type="menu"
                     label="&historyButton.label;">
				  <menupopup id="ctraddon_history_historyMenupopup"
							 placespopup="true"
							 oncommand="this.parentNode._placesView._onCommand(event);"
							 onclick="checkForMiddleClick(this, event);"
							 onpopupshowing="if (!this.parentNode._placesView)
											   new HistoryMenu(event);"
							 tooltip="bhTooltip"
							 popupsinherittooltip="true">
					<menuitem id="ctraddon_history_showAllHistory"
							  label="&showAllHistoryCmd2.label;"
							  key="showAllHistoryKb"
							  command="Browser:ShowAllHistory"/>
					<menuseparator/>
					<menuitem id="ctraddon_history_sanitizeHistory"
							  label="&clearRecentHistory.label;"
							  key="key_sanitize"
							  command="Tools:Sanitize"/>
					<menuseparator id="sanitizeSeparator"/>
					<menuitem id="ctraddon_history_sync-tabs"
							  class="syncTabsMenuItem"
							  label="&syncTabsMenu2.label;"
							  oncommand="BrowserOpenSyncTabs();"
							  disabled="true"/>
					<menuitem id="ctraddon_history_restoreLastSession"
							  label="&historyRestoreLastSession.label;"
							  command="Browser:RestoreLastSession"/>
					<menu id="ctraddon_history_recentlyClosedTabsMenu"
						  class="recentlyClosedTabsMenu"
						  label="&historyUndoMenu.label;"
						  disabled="true">
					  <menupopup id="ctraddon_history_recentlyClosedTabsMenupopup"
								 placespopup="true"
								 onpopupshowing="document.getElementById('ctraddon_history-menu-toolbar-button')._placesView.populateUndoSubmenu();"/>
					</menu>
					<menu id="ctraddon_history_recentlyClosedWindowsMenu"
						  class="recentlyClosedWindowsMenu"
						  label="&historyUndoWindowMenu.label;"
						  disabled="true">
					  <menupopup id="ctraddon_history_recentlyClosedWindowsMenupopup"
								 placespopup="true"
								 onpopupshowing="document.getElementById('ctraddon_history-menu-toolbar-button')._placesView.populateUndoWindowSubmenu();"/>
					</menu>
					<menuseparator/>
				  </menupopup>
	  </toolbarbutton>

      
	  <!--### adds own bookmarks menu button to browsers customizing area ###-->
	  <toolbarbutton id="ctraddon_bookmarks-menu-toolbar-button"
                     class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
                     persist="class"
                     removable="true"
                     type="menu"
                     label="&bookmarksMenuButton.label;"
                     tooltiptext="&bookmarksButton.tooltip;"
                     ondragenter="PlacesMenuDNDHandler.onDragEnter(event);"
                     ondragover="PlacesMenuDNDHandler.onDragOver(event);"
                     ondragleave="PlacesMenuDNDHandler.onDragLeave(event);"
                     ondrop="PlacesMenuDNDHandler.onDrop(event);">
        <menupopup id="ctraddon_BMB_bookmarksPopup"
                   placespopup="true"
                   context="placesContext"
                   openInTabs="children"
                   oncommand="BookmarksEventHandler.onCommand(event, this.parentNode._placesView);"
                   onclick="BookmarksEventHandler.onClick(event, this.parentNode._placesView);"
                   onpopupshowing="BookmarkingUI.onPopupShowing(event);
                                   if (!this.parentNode._placesView)
                                     new PlacesMenu(event, 'place:folder=BOOKMARKS_MENU');"
                   tooltip="bhTooltip" popupsinherittooltip="true">
          <menuitem id="BMB_bookmarksShowAll"
					class="menuitem-iconic"
                    label="&showAllBookmarks2.label;"
                    command="Browser:ShowAllBookmarks"
                    key="manBookmarkKb"/>
          <menuseparator/>
          <menuitem id="ctraddon_BMB_bookmarkThisPage"
                    class="menuitem-iconic"
                    label="&bookmarkThisPageCmd.label;"
                    command="Browser:AddBookmarkAs"
                    key="addBookmarkAsKb"/>
          <menuitem id="ctraddon_BMB_subscribeToPageMenuitem"
                    class="menuitem-iconic"
                    label="&subscribeToPageMenuitem.label;"
                    oncommand="return FeedHandler.subscribeToFeed(null, event);"
                    onclick="checkForMiddleClick(this, event);"
                    observes="singleFeedMenuitemState"/>
          <menu id="ctraddon_BMB_subscribeToPageMenupopup"
                class="menu-iconic"
                label="&subscribeToPageMenupopup.label;"
                observes="multipleFeedsMenuState">
            <menupopup id="ctraddon_BMB_subscribeToPageSubmenuMenupopup"
                       onpopupshowing="return FeedHandler.buildFeedList(event.target);"
                       oncommand="return FeedHandler.subscribeToFeed(null, event);"
                       onclick="checkForMiddleClick(this, event);"/>
          </menu>
          <menuseparator/>
          <menu id="ctraddon_BMB_bookmarksToolbar"
                placesanonid="toolbar-autohide"
                class="menu-iconic bookmark-item"
                label="&personalbarCmd.label;"
                container="true">
            <menupopup id="ctraddon_BMB_bookmarksToolbarPopup"
                       placespopup="true"
                       context="placesContext"
                       onpopupshowing="if (!this.parentNode._placesView)
                                         new PlacesMenu(event, 'place:folder=TOOLBAR');"/>
          </menu>
          <menu id="ctraddon_BMB_readingList"
                class="menu-iconic bookmark-item"
                label="&readingList.label;"
                container="true">
              <observes element="readingListSidebar" attribute="hidden"/>
              <menupopup id="ctraddon_BMB_readingListPopup"
                         placespopup="true"
                         onpopupshowing="ReadingListUI.onReadingListPopupShowing(this);">
                <menuitem id="ctraddon_BMB_viewReadingListSidebar"
                          oncommand="SidebarUI.show('readingListSidebar');"
                          label="&readingList.showSidebar.label;"/>
              </menupopup>
          </menu>
          <menuseparator/>

          <!-- Bookmarks menu items -->
          <menuseparator builder="end"
                         class="hide-if-empty-places-result"/>
          <menuitem id="ctraddon_BMB_unsortedBookmarks"
                    label="&bookmarksMenuButton.unsorted.label;"
                    oncommand="PlacesCommandHook.showPlacesOrganizer('UnfiledBookmarks');"
                    class="menuitem-iconic"/>
        </menupopup>
      </toolbarbutton>
	  
	  <!--### creates a CTR preference button ###-->
	  <toolbarbutton id="ctraddon_ctr-button" class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
					 label="CTR"
					 persist="class"
					 cui-areatype="toolbar"
					 oncommand="classicthemerestorerjs.ctr.openCTRPreferences();"
                     tooltiptext="&Ctr_title;"/>

	  <!--### creates a bookmarks sidebar button ###-->
	  <toolbarbutton id="ctraddon_bookmarks-button" class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
					 label="&bookmarksMenuButton.label;"
                     observes="viewBookmarksSidebar"
                     tooltiptext="&bookmarksMenuButton.label; &Ctr_sidebarbutton;"/>
					 
      <!--### creates a history sidebar button ###-->
	  <toolbarbutton id="ctraddon_history-button" class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
					 label="&historyButton.label;"
                     observes="viewHistorySidebar"
                     tooltiptext="&historyButton.label; &Ctr_sidebarbutton;"/>
					 
					 
	  <!--### creates a duplicated movable PanelUI button ###-->
	  <toolbaritem id="ctraddon_panelui-button"
                   class="chromeclass-toolbar-additional"
                   removable="true"
				   overflows="false"
                   title="&brandShortName;">
        <toolbarbutton id="PanelUI-menu-button"
                       class="toolbarbutton-1"
                       label="&brandShortName;"
                       tooltiptext="&appmenu.tooltip;"/>
      </toolbaritem>

	  <!--### extra separator for panel ui button ###-->
	  <toolbaritem id="ctraddon_puib_separator"
                   title="&Ctr_puibseparator;"
                   customizableui-areatype="toolbar"
				   overflows="false"
                   removable="true"/>
				   
	  <toolbaritem id="ctraddon_navigator-throbber"
                   title="&Ctr_navthrobber;"
                   customizableui-areatype="toolbar"
				   align="center"
				   pack="center"
				   onclick="if(event.button=='0') classicthemerestorerjs.ctr.openAThrobberUrl();"
				   overflows="false"
                   removable="true"/>
	  
	  <!--### creates movable back-forward buttons ###-->
	  <toolbaritem id="ctraddon_back-forward-button" class="chromeclass-toolbar-additional"
                   context="backForwardMenu" removable="true"
                   forwarddisabled="false"
				   overflows="false"
                   title="&backCmd.label; &forwardCmd.label;">
          <toolbarbutton id="ctraddon_back-button" class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
                         label="&backCmd.label;"
                         command="Browser:BackOrBackDuplicate"
						 onmousedown="classicthemerestorerjs.ctr.ctrBackMenuShow(this);"
						 onclick="checkForMiddleClick(this, event);"
                         tooltip="back-button-tooltip"
						 wrap="true"
                         context="backForwardMenu"/>
          <toolbarbutton id="ctraddon_forward-button" class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
                         label="&forwardCmd.label;"
                         command="Browser:ForwardOrForwardDuplicate"
						 onmousedown="classicthemerestorerjs.ctr.ctrBackMenuShow(this);"
						 onclick="checkForMiddleClick(this, event);"
                         tooltip="forward-button-tooltip"
						 wrap="true"
                         context="backForwardMenu"/>
      </toolbaritem>
	  
	  <!--### creates a back-forward history dropmarker ###-->
	  <toolbarbutton id="ctraddon_back-forward-dropmarker" type="menu" 
			disabled="false"
			label="&backCmd.label; &forwardCmd.label;"
			class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
			onbroadcast="if (this.disabled) this.disabled =
			document.getElementById('Browser:Back').hasAttribute('disabled') &amp;&amp;
			document.getElementById('Browser:Forward').hasAttribute('disabled');">
		<menupopup context=""
				position="after_start"
				onpopupshowing="return FillHistoryMenu(event.target);"
				oncommand="gotoHistoryIndex(event); event.stopPropagation();"
				onclick="checkForMiddleClick(this, event);"/>
			<observes element="Browser:Back" attribute="disabled"/>
			<observes element="Browser:Forward" attribute="disabled"/>
	  </toolbarbutton>
	  
      
	  <!--### creates a movable reload button ###-->
	  <toolbarbutton id="ctraddon_reload-button" class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
                     label="&reloadCmd.label;" removable="true"
                     command="Browser:ReloadOrDuplicate"
                     onclick="checkForMiddleClick(this, event);"
                     tooltiptext="&reloadButton.tooltip;"/>

      <!--### creates a movable stop button ###-->
	  <toolbarbutton id="ctraddon_stop-button" class="toolbarbutton-1 chromeclass-toolbar-additional ctraddon-toolbarbutton"
                     label="&stopCmd.label;" removable="true"
                     command="Browser:Stop"
                     tooltiptext="&stopButton.tooltip;"/>
  
	  <!--### creates clone of fullscreen window control buttons ###-->
	  <toolbaritem id="ctraddon_window-controls" class="chromeclass-toolbar-additional"
                   removable="true" overflows="false" title="&Ctr_windowcontrols;">
        <toolbarbutton id="minimize-button"
                       tooltiptext="&fullScreenMinimize.tooltip;"
                       oncommand="window.minimize();"/>
        <toolbarbutton id="restore-button"
                       tooltiptext="&fullScreenRestore.tooltip;"
                       oncommand="BrowserFullScreen();"/>
        <toolbarbutton id="close-button"
                       tooltiptext="&fullScreenClose.tooltip;"
                       oncommand="BrowserTryToCloseWindow();"/>
      </toolbaritem>
	  
	  <!--### restores spaces, flexible spaces and separators ###-->
      <toolbarspring 	id="spring"		class="ctraddon_flexspaces"	label="&Ctr_flexspace;"	customizableui-areatype="toolbar" removable="true" flex="1"/>
      <toolbarspacer 	id="spacer"		class="ctraddon_spaces"		label="&Ctr_space;"		customizableui-areatype="toolbar" removable="true"/>
      <toolbarseparator id="separator"	class="ctraddon_separators"	label="&Ctr_separator;"	customizableui-areatype="toolbar" removable="true"/>

	</toolbarpalette>
</overlay> 
